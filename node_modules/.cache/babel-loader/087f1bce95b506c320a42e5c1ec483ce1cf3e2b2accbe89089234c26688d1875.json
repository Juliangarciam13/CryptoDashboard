{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/NewProjectReact/src/Components/Graph.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoChart = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      try {\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=30\");\n        const data = await response.json();\n        const formattedData = {\n          labels: data.prices.map(entry => new Date(entry[0]).toLocaleDateString()),\n          datasets: [{\n            label: \"Precio de Bitcoin (USD)\",\n            data: data.prices.map(entry => entry[1]),\n            backgroundColor: \"blue\",\n            borderColor: \"blue\"\n          }]\n        };\n        setChartData(formattedData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCryptoData();\n  }, []);\n  useEffect(() => {\n    if (chartData) {\n      const ctx = chartRef.current.getContext(\"2d\");\n      new window.Chart(ctx, {\n        type: \"bar\",\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              grid: {\n                display: false\n              }\n            },\n            y: {\n              grid: {\n                display: true\n              },\n              ticks: {\n                beginAtZero: true\n              }\n            }\n          }\n        }\n      });\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chartData ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando datos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChart, \"pZiLd+mBGrUgtjABGYJARwxehfg=\");\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["useState","useEffect","useRef","jsxDEV","_jsxDEV","CryptoChart","_s","chartData","setChartData","chartRef","fetchCryptoData","response","fetch","data","json","formattedData","labels","prices","map","entry","Date","toLocaleDateString","datasets","label","backgroundColor","borderColor","error","console","ctx","current","getContext","window","Chart","type","options","responsive","maintainAspectRatio","scales","x","grid","display","y","ticks","beginAtZero","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/NewProjectReact/src/Components/Graph.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\nconst CryptoChart = () => {\n  const [chartData, setChartData] = useState(null);\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      try {\n        const response = await fetch(\n          \"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=30\"\n        );\n        const data = await response.json();\n\n        const formattedData = {\n          labels: data.prices.map((entry) => new Date(entry[0]).toLocaleDateString()),\n          datasets: [\n            {\n              label: \"Precio de Bitcoin (USD)\",\n              data: data.prices.map((entry) => entry[1]),\n              backgroundColor: \"blue\",\n              borderColor: \"blue\",\n            },\n          ],\n        };\n\n        setChartData(formattedData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchCryptoData();\n  }, []);\n\n  useEffect(() => {\n    if (chartData) {\n      const ctx = chartRef.current.getContext(\"2d\");\n\n      new window.Chart(ctx, {\n        type: \"bar\",\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              grid: {\n                display: false,\n              },\n            },\n            y: {\n              grid: {\n                display: true,\n              },\n              ticks: {\n                beginAtZero: true,\n              },\n            },\n          },\n        },\n      });\n    }\n  }, [chartData]);\n\n  return (\n    <div>\n      {chartData ? (\n        <canvas ref={chartRef}></canvas>\n      ) : (\n        <p>Cargando datos...</p>\n      )}\n    </div>\n  );\n};\n\nexport default CryptoChart;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMS,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qFACF,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,MAAMC,aAAa,GAAG;UACpBC,MAAM,EAAEH,IAAI,CAACI,MAAM,CAACC,GAAG,CAAEC,KAAK,IAAK,IAAIC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,kBAAkB,CAAC,CAAC,CAAC;UAC3EC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,yBAAyB;YAChCV,IAAI,EAAEA,IAAI,CAACI,MAAM,CAACC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1CK,eAAe,EAAE,MAAM;YACvBC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC;QAEDjB,YAAY,CAACO,aAAa,CAAC;MAC7B,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDhB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACd,IAAIM,SAAS,EAAE;MACb,MAAMqB,GAAG,GAAGnB,QAAQ,CAACoB,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;MAE7C,IAAIC,MAAM,CAACC,KAAK,CAACJ,GAAG,EAAE;QACpBK,IAAI,EAAE,KAAK;QACXpB,IAAI,EAAEN,SAAS;QACf2B,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE,KAAK;UAC1BC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,IAAI,EAAE;gBACJC,OAAO,EAAE;cACX;YACF,CAAC;YACDC,CAAC,EAAE;cACDF,IAAI,EAAE;gBACJC,OAAO,EAAE;cACX,CAAC;cACDE,KAAK,EAAE;gBACLC,WAAW,EAAE;cACf;YACF;UACF;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACpC,SAAS,CAAC,CAAC;EAEf,oBACEH,OAAA;IAAAwC,QAAA,EACGrC,SAAS,gBACRH,OAAA;MAAQyC,GAAG,EAAEpC;IAAS;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,gBAEhC7C,OAAA;MAAAwC,QAAA,EAAG;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACxB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3C,EAAA,CAxEID,WAAW;AAAA6C,EAAA,GAAX7C,WAAW;AA0EjB,eAAeA,WAAW;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}