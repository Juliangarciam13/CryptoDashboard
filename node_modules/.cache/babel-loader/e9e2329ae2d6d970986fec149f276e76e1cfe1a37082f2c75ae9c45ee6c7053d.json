{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/CryptoDashboard/src/Components/Graph.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoChart = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      try {\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=30\");\n        const data = await response.json();\n        const formattedData = {\n          labels: data.prices.slice(-30).map(entry => new Date(entry[0]).toLocaleDateString()),\n          datasets: [{\n            label: \"Precio de Bitcoin (USD)\",\n            data: data.prices.slice(-30).map(entry => entry[1]),\n            backgroundColor: \"rgba(192, 192, 192, 0.8)\",\n            borderColor: \"rgba(192, 192, 192, 1)\",\n            borderWidth: 2\n          }]\n        };\n        setChartData(formattedData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCryptoData();\n  }, []);\n  useEffect(() => {\n    if (chartData) {\n      const ctx = chartRef.current.getContext(\"2d\");\n      if (chartRef.current.chart) {\n        chartRef.current.chart.destroy();\n      }\n      chartRef.current.chart = new Chart(ctx, {\n        type: \"bar\",\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              grid: {\n                display: false\n              },\n              ticks: {\n                beginAtZero: true,\n                font: {\n                  size: 12\n                }\n              },\n              categoryPercentage: 1,\n              barPercentage: 0.8\n            },\n            y: {\n              grid: {\n                display: true\n              },\n              ticks: {\n                beginAtZero: true,\n                font: {\n                  size: 12\n                }\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      });\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"400px\"\n    },\n    children: chartData ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando datos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 7\n  }, this);\n};\n_s(CryptoChart, \"pZiLd+mBGrUgtjABGYJARwxehfg=\");\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["useState","useEffect","useRef","Chart","jsxDEV","_jsxDEV","CryptoChart","_s","chartData","setChartData","chartRef","fetchCryptoData","response","fetch","data","json","formattedData","labels","prices","slice","map","entry","Date","toLocaleDateString","datasets","label","backgroundColor","borderColor","borderWidth","error","console","ctx","current","getContext","chart","destroy","type","options","responsive","maintainAspectRatio","scales","x","grid","display","ticks","beginAtZero","font","size","categoryPercentage","barPercentage","y","plugins","legend","style","width","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/CryptoDashboard/src/Components/Graph.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\n\nconst CryptoChart = () => {\n    const [chartData, setChartData] = useState(null);\n    const chartRef = useRef(null);\n  \n    useEffect(() => {\n      const fetchCryptoData = async () => {\n        try {\n          const response = await fetch(\n            \"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=30\"\n          );\n          const data = await response.json();\n  \n          const formattedData = {\n            labels: data.prices\n              .slice(-30)\n              .map((entry) => new Date(entry[0]).toLocaleDateString()),\n            datasets: [\n              {\n                label: \"Precio de Bitcoin (USD)\",\n                data: data.prices.slice(-30).map((entry) => entry[1]),\n                backgroundColor: \"rgba(192, 192, 192, 0.8)\",\n                borderColor: \"rgba(192, 192, 192, 1)\",\n                borderWidth: 2,\n              },\n            ],\n          };\n  \n          setChartData(formattedData);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n      fetchCryptoData();\n    }, []);\n  \n    useEffect(() => {\n      if (chartData) {\n        const ctx = chartRef.current.getContext(\"2d\");\n  \n        if (chartRef.current.chart) {\n          chartRef.current.chart.destroy();\n        }\n  \n        chartRef.current.chart = new Chart(ctx, {\n          type: \"bar\",\n          data: chartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              x: {\n                grid: {\n                  display: false,\n                },\n                ticks: {\n                  beginAtZero: true,\n                  font: {\n                    size: 12,\n                  },\n                },\n                categoryPercentage: 1,\n                barPercentage: 0.8,\n              },\n              y: {\n                grid: {\n                  display: true,\n                },\n                ticks: {\n                  beginAtZero: true,\n                  font: {\n                    size: 12,\n                  },\n                },\n              },\n            },\n            plugins: {\n              legend: {\n                display: false,\n              },\n            },\n          },\n        });\n      }\n    }, [chartData]);\n  \n    return (\n      <div style={{ width: \"100%\", height: \"400px\" }}>\n        {chartData ? (\n          <canvas ref={chartRef}></canvas>\n        ) : (\n          <p>Cargando datos...</p>\n        )}\n      </div>\n    );\n  };\n  \n  export default CryptoChart;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}