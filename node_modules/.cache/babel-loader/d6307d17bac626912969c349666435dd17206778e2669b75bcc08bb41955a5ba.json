{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/CryptoDashboard/src/Components/Graph.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoChart = _ref => {\n  _s();\n  let {\n    selectedCrypto\n  } = _ref;\n  const [chartData, setChartData] = useState(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      try {\n        const response = await fetch(`https://api.coingecko.com/api/v3/coins/${selectedCrypto.id}/market_chart?vs_currency=usd&days=30`);\n        const data = await response.json();\n        const dates = [];\n        const prices = [];\n        data.prices.forEach(price => {\n          const date = new Date(price[0]);\n          const formattedDate = date.toLocaleDateString();\n          dates.push(formattedDate);\n          prices.push(price[1]);\n        });\n        const formattedData = {\n          labels: dates,\n          datasets: [{\n            label: `Precio de ${selectedCrypto.name} (USD)`,\n            data: prices,\n            backgroundColor: \"rgba(192, 192, 192, 0.8)\",\n            borderWidth: 2,\n            hoverBackgroundColor: \"#C1EE0A\"\n          }]\n        };\n        setChartData(formattedData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    if (selectedCrypto) {\n      fetchCryptoData();\n    }\n  }, [selectedCrypto]);\n  useEffect(() => {\n    if (chartData) {\n      const ctx = chartRef.current.getContext(\"2d\");\n      if (chartRef.current.chart) {\n        chartRef.current.chart.destroy();\n      }\n      chartRef.current.chart = new Chart(ctx, {\n        type: \"bar\",\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              grid: {\n                display: false\n              },\n              ticks: {\n                beginAtZero: true,\n                font: {\n                  size: 12\n                }\n              },\n              categoryPercentage: 1,\n              barPercentage: 0.8\n            },\n            y: {\n              grid: {\n                display: true\n              },\n              min: 28000,\n              max: 30000,\n              ticks: {\n                stepSize: 500,\n                font: {\n                  size: 12\n                }\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      });\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"400px\"\n    },\n    children: chartData ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 57\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 7\n  }, this);\n};\n_s(CryptoChart, \"pZiLd+mBGrUgtjABGYJARwxehfg=\");\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["useState","useEffect","useRef","Chart","jsxDEV","_jsxDEV","CryptoChart","_ref","_s","selectedCrypto","chartData","setChartData","chartRef","fetchCryptoData","response","fetch","id","data","json","dates","prices","forEach","price","date","Date","formattedDate","toLocaleDateString","push","formattedData","labels","datasets","label","name","backgroundColor","borderWidth","hoverBackgroundColor","error","console","ctx","current","getContext","chart","destroy","type","options","responsive","maintainAspectRatio","scales","x","grid","display","ticks","beginAtZero","font","size","categoryPercentage","barPercentage","y","min","max","stepSize","plugins","legend","style","width","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/CryptoDashboard/src/Components/Graph.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\n\nconst CryptoChart = ({ selectedCrypto }) => {\n    const [chartData, setChartData] = useState(null);\n    const chartRef = useRef(null);\n  \n    useEffect(() => {\n        const fetchCryptoData = async () => {\n            try {\n              const response = await fetch(\n                `https://api.coingecko.com/api/v3/coins/${selectedCrypto.id}/market_chart?vs_currency=usd&days=30`\n              );\n              const data = await response.json();\n          \n              const dates = [];\n              const prices = [];\n          \n              data.prices.forEach((price) => {\n                const date = new Date(price[0]);\n                const formattedDate = date.toLocaleDateString();\n                dates.push(formattedDate);\n                prices.push(price[1]);\n              });\n          \n              const formattedData = {\n                labels: dates,\n                datasets: [\n                  {\n                    label: `Precio de ${selectedCrypto.name} (USD)`,\n                    data: prices,\n                    backgroundColor: \"rgba(192, 192, 192, 0.8)\",\n                    borderWidth: 2,\n                    hoverBackgroundColor: \"#C1EE0A\",\n                  },\n                ],\n              };\n          \n              setChartData(formattedData);\n            } catch (error) {\n              console.error(error);\n            }\n          };\n  \n      if (selectedCrypto) {\n        fetchCryptoData();\n      }\n    }, [selectedCrypto]);\n  \n    useEffect(() => {\n      if (chartData) {\n        const ctx = chartRef.current.getContext(\"2d\");\n  \n        if (chartRef.current.chart) {\n          chartRef.current.chart.destroy();\n        }\n  \n        chartRef.current.chart = new Chart(ctx, {\n          type: \"bar\",\n          data: chartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              x: {\n                grid: {\n                  display: false,\n                },\n                ticks: {\n                  beginAtZero: true,\n                  font: {\n                    size: 12,\n                  },\n                },\n                categoryPercentage: 1,\n                barPercentage: 0.8,\n              },\n              y: {\n                grid: {\n                  display: true,\n                },\n                min: 28000,\n                max: 30000,\n                ticks: {\n                  stepSize: 500,\n                  font: {\n                    size: 12,\n                  },\n                },\n              },\n            },\n            plugins: {\n              legend: {\n                display: false,\n              },\n            },\n          },\n        });\n      }\n    }, [chartData]);\n  \n    return (\n      <div style={{ width: \"100%\", height: \"400px\" }}>\n        {chartData ? <canvas ref={chartRef}></canvas> : <p>Loading...</p>}\n      </div>\n    );\n  };\n  \n  export default CryptoChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}