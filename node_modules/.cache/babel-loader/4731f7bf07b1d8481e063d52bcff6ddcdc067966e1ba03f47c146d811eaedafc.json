{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/CryptoDashboard/src/Components/Graph.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoChart = _ref => {\n  _s();\n  let {\n    selectedCrypto\n  } = _ref;\n  const [chartData, setChartData] = useState(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      try {\n        const response = await fetch(`https://api.coingecko.com/api/v3/coins/${selectedCrypto.id}/market_chart?vs_currency=usd&days=30`);\n        const data = await response.json();\n        const dates = [];\n        const prices = [];\n        const startDate = new Date(data.prices[0][0]);\n        for (let i = 0; i < 30; i++) {\n          const date = new Date(startDate);\n          date.setDate(startDate.getDate() + i);\n          dates.push(date.toLocaleDateString());\n          prices.push(data.prices[i][1]);\n        }\n        const formattedData = {\n          labels: dates,\n          datasets: [{\n            label: `Precio de ${selectedCrypto.name} (USD)`,\n            data: prices,\n            backgroundColor: \"rgba(192, 192, 192, 0.8)\",\n            borderWidth: 2,\n            hoverBackgroundColor: \"#C1EE0A\"\n          }]\n        };\n        setChartData(formattedData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    if (selectedCrypto) {\n      fetchCryptoData();\n    }\n  }, [selectedCrypto]);\n  useEffect(() => {\n    if (chartData) {\n      const ctx = chartRef.current.getContext(\"2d\");\n      if (chartRef.current.chart) {\n        chartRef.current.chart.destroy();\n      }\n      chartRef.current.chart = new Chart(ctx, {\n        type: \"bar\",\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              grid: {\n                display: false\n              },\n              ticks: {\n                beginAtZero: true,\n                font: {\n                  size: 12\n                }\n              },\n              categoryPercentage: 1,\n              barPercentage: 0.8\n            },\n            y: {\n              grid: {\n                display: true\n              },\n              min: 28000,\n              max: 30000,\n              ticks: {\n                stepSize: 500,\n                font: {\n                  size: 12\n                }\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      });\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"400px\"\n    },\n    children: chartData ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(CryptoChart, \"pZiLd+mBGrUgtjABGYJARwxehfg=\");\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["useState","useEffect","useRef","Chart","jsxDEV","_jsxDEV","CryptoChart","_ref","_s","selectedCrypto","chartData","setChartData","chartRef","fetchCryptoData","response","fetch","id","data","json","dates","prices","startDate","Date","i","date","setDate","getDate","push","toLocaleDateString","formattedData","labels","datasets","label","name","backgroundColor","borderWidth","hoverBackgroundColor","error","console","ctx","current","getContext","chart","destroy","type","options","responsive","maintainAspectRatio","scales","x","grid","display","ticks","beginAtZero","font","size","categoryPercentage","barPercentage","y","min","max","stepSize","plugins","legend","style","width","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/CryptoDashboard/src/Components/Graph.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\n\n\nconst CryptoChart = ({ selectedCrypto }) => {\n    const [chartData, setChartData] = useState(null);\n    const chartRef = useRef(null);\n\n    useEffect(() => {\n        const fetchCryptoData = async () => {\n          try {\n            const response = await fetch(\n              `https://api.coingecko.com/api/v3/coins/${selectedCrypto.id}/market_chart?vs_currency=usd&days=30`\n            );\n            const data = await response.json();\n      \n            const dates = [];\n            const prices = [];\n      \n            const startDate = new Date(data.prices[0][0]);\n            for (let i = 0; i < 30; i++) {\n              const date = new Date(startDate);\n              date.setDate(startDate.getDate() + i);\n              dates.push(date.toLocaleDateString());\n              prices.push(data.prices[i][1]);\n            }\n      \n            const formattedData = {\n              labels: dates,\n              datasets: [\n                {\n                  label: `Precio de ${selectedCrypto.name} (USD)`,\n                  data: prices,\n                  backgroundColor: \"rgba(192, 192, 192, 0.8)\",\n                  borderWidth: 2,\n                  hoverBackgroundColor: \"#C1EE0A\",\n                },\n              ],\n            };\n      \n            setChartData(formattedData);\n          } catch (error) {\n            console.error(error);\n          }\n        };\n      \n        if (selectedCrypto) {\n          fetchCryptoData();\n        }\n      }, [selectedCrypto]);\n\n    useEffect(() => {\n        if (chartData) {\n            const ctx = chartRef.current.getContext(\"2d\");\n\n            if (chartRef.current.chart) {\n                chartRef.current.chart.destroy();\n            }\n\n            chartRef.current.chart = new Chart(ctx, {\n                type: \"bar\",\n                data: chartData,\n                options: {\n                    responsive: true,\n                    maintainAspectRatio: false,\n                    scales: {\n                        x: {\n                            grid: {\n                                display: false,\n                            },\n                            ticks: {\n                                beginAtZero: true,\n                                font: {\n                                    size: 12,\n                                },\n                            },\n                            categoryPercentage: 1,\n                            barPercentage: 0.8,\n                        },\n                        y: {\n                            grid: {\n                                display: true,\n                            },\n                            min: 28000,\n                            max: 30000,\n                            ticks: {\n                                stepSize: 500,\n                                font: {\n                                    size: 12,\n                                },\n                            },\n                        },\n                    },\n                    plugins: {\n                        legend: {\n                            display: false,\n                        },\n                    },\n                },\n            });\n        }\n    }, [chartData]);\n\n    return (\n        <div style={{ width: \"100%\", height: \"400px\" }}>\n            {chartData ? (\n                <canvas ref={chartRef}></canvas>\n            ) : (\n                <p>Loading...</p>\n            )}\n        </div>\n    );\n};\n\nexport default CryptoChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}