{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/NewProjectReact/src/Components/Graph.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoChart = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      try {\n        const response = await fetch(\"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=30\");\n        const data = await response.json();\n        const formattedData = {\n          labels: data.prices.map(entry => new Date(entry[0]).toLocaleDateString()),\n          datasets: [{\n            label: \"Precio de Bitcoin (USD)\",\n            data: data.prices.map(entry => entry[1]),\n            backgroundColor: \"blue\",\n            borderColor: \"blue\"\n          }]\n        };\n        setChartData(formattedData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCryptoData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chartData ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        indexAxis: \"y\",\n        scales: {\n          x: {\n            grid: {\n              display: false\n            }\n          },\n          y: {\n            grid: {\n              display: true\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }\n        }\n      }\n    }, JSON.stringify(chartData), false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando datos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n};\n_s(CryptoChart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["useState","useEffect","Bar","jsxDEV","_jsxDEV","CryptoChart","_s","chartData","setChartData","fetchCryptoData","response","fetch","data","json","formattedData","labels","prices","map","entry","Date","toLocaleDateString","datasets","label","backgroundColor","borderColor","error","console","children","options","responsive","maintainAspectRatio","indexAxis","scales","x","grid","display","y","ticks","beginAtZero","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/NewProjectReact/src/Components/Graph.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { Bar } from \"react-chartjs-2\";\n\nconst CryptoChart = () => {\n    const [chartData, setChartData] = useState(null);\n  \n    useEffect(() => {\n      const fetchCryptoData = async () => {\n        try {\n          const response = await fetch(\n            \"https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=30\"\n          );\n          const data = await response.json();\n  \n          const formattedData = {\n            labels: data.prices.map((entry) => new Date(entry[0]).toLocaleDateString()),\n            datasets: [\n              {\n                label: \"Precio de Bitcoin (USD)\",\n                data: data.prices.map((entry) => entry[1]),\n                backgroundColor: \"blue\",\n                borderColor: \"blue\",\n              },\n            ],\n          };\n  \n          setChartData(formattedData);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n      fetchCryptoData();\n    }, []);\n  \n    return (\n      <div>\n        {chartData ? (\n          <Bar\n            key={JSON.stringify(chartData)}\n            data={chartData}\n            options={{\n              responsive: true,\n              maintainAspectRatio: false,\n              indexAxis: \"y\",\n              scales: {\n                x: {\n                  grid: {\n                    display: false,\n                  },\n                },\n                y: {\n                  grid: {\n                    display: true,\n                  },\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              },\n            }}\n          />\n        ) : (\n          <p>Cargando datos...</p>\n        )}\n      </div>\n    );\n  };\n  \n  export default CryptoChart;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,qFACF,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,MAAMC,aAAa,GAAG;UACpBC,MAAM,EAAEH,IAAI,CAACI,MAAM,CAACC,GAAG,CAAEC,KAAK,IAAK,IAAIC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,kBAAkB,CAAC,CAAC,CAAC;UAC3EC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,yBAAyB;YAChCV,IAAI,EAAEA,IAAI,CAACI,MAAM,CAACC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1CK,eAAe,EAAE,MAAM;YACvBC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC;QAEDhB,YAAY,CAACM,aAAa,CAAC;MAC7B,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDhB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAuB,QAAA,EACGpB,SAAS,gBACRH,OAAA,CAACF,GAAG;MAEFU,IAAI,EAAEL,SAAU;MAChBqB,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE,KAAK;QAC1BC,SAAS,EAAE,GAAG;QACdC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,IAAI,EAAE;cACJC,OAAO,EAAE;YACX;UACF,CAAC;UACDC,CAAC,EAAE;YACDF,IAAI,EAAE;cACJC,OAAO,EAAE;YACX,CAAC;YACDE,KAAK,EAAE;cACLC,WAAW,EAAE;YACf;UACF;QACF;MACF;IAAE,GArBGC,IAAI,CAACC,SAAS,CAACjC,SAAS,CAAC;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAsB/B,CAAC,gBAEFxC,OAAA;MAAAuB,QAAA,EAAG;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACxB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtC,EAAA,CAhEED,WAAW;AAAAwC,EAAA,GAAXxC,WAAW;AAkEf,eAAeA,WAAW;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}