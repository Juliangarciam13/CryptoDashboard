{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/NewProjectReact/src/Components/Graph.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Bar, Chart } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoChart = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    Chart.scaleService.registerScaleType(\"category\", Chart.scaleService.getScaleConstructor(\"category\").extend({}));\n    const fetchCryptoData = async () => {\n      try {\n        const response = await fetch('https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=30');\n        const data = await response.json();\n        const formattedData = {\n          labels: data.prices.map(entry => new Date(entry[0]).toLocaleDateString()),\n          datasets: [{\n            label: 'Precio de Bitcoin (USD)',\n            data: data.prices.map(entry => entry[1]),\n            backgroundColor: 'blue',\n            borderColor: 'blue'\n          }]\n        };\n        setChartData(formattedData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCryptoData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chartData ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            type: \"category\",\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            gridLines: {\n              display: true\n            },\n            ticks: {\n              beginAtZero: true\n            }\n          }]\n        }\n      }\n    }, JSON.stringify(chartData), false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando datos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(CryptoChart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["useState","useEffect","Bar","Chart","jsxDEV","_jsxDEV","CryptoChart","_s","chartData","setChartData","scaleService","registerScaleType","getScaleConstructor","extend","fetchCryptoData","response","fetch","data","json","formattedData","labels","prices","map","entry","Date","toLocaleDateString","datasets","label","backgroundColor","borderColor","error","console","children","options","responsive","maintainAspectRatio","scales","xAxes","type","gridLines","display","yAxes","ticks","beginAtZero","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/NewProjectReact/src/Components/Graph.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { Bar, Chart } from \"react-chartjs-2\";\n\nconst CryptoChart = () => {\n    const [chartData, setChartData] = useState(null);\n    useEffect(() => {\n\n        Chart.scaleService.registerScaleType(\"category\", Chart.scaleService.getScaleConstructor(\"category\").extend({}));\n        const fetchCryptoData = async () => {\n            try {\n                const response = await fetch(\n                    'https://api.coingecko.com/api/v3/coins/bitcoin/market_chart?vs_currency=usd&days=30'\n                );\n                const data = await response.json();\n\n                const formattedData = {\n                    labels: data.prices.map((entry) => new Date(entry[0]).toLocaleDateString()),\n                    datasets: [\n                        {\n                            label: 'Precio de Bitcoin (USD)',\n                            data: data.prices.map((entry) => entry[1]),\n                            backgroundColor: 'blue',\n                            borderColor: 'blue',\n                        },\n                    ],\n                };\n\n                setChartData(formattedData);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n\n        fetchCryptoData();\n    }, []);\n\n    return (\n        <div>\n            {chartData ? (\n                <Bar\n                    key={JSON.stringify(chartData)}\n                    data={chartData}\n                    options={{\n                        responsive: true,\n                        maintainAspectRatio: false,\n                        scales: {\n                            xAxes: [\n                                {\n                                    type: \"category\",\n                                    gridLines: {\n                                        display: false,\n                                    },\n                                },\n                            ],\n                            yAxes: [\n                                {\n                                    gridLines: {\n                                        display: true,\n                                    },\n                                    ticks: {\n                                        beginAtZero: true,\n                                    },\n                                },\n                            ],\n                        },\n                    }}\n                />\n            ) : (\n                <p>Cargando datos...</p>\n            )}\n        </div>\n    );\n};\n\nexport default CryptoChart;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,GAAG,EAAEC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChDC,SAAS,CAAC,MAAM;IAEZE,KAAK,CAACO,YAAY,CAACC,iBAAiB,CAAC,UAAU,EAAER,KAAK,CAACO,YAAY,CAACE,mBAAmB,CAAC,UAAU,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/G,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,qFACJ,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,MAAMC,aAAa,GAAG;UAClBC,MAAM,EAAEH,IAAI,CAACI,MAAM,CAACC,GAAG,CAAEC,KAAK,IAAK,IAAIC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,kBAAkB,CAAC,CAAC,CAAC;UAC3EC,QAAQ,EAAE,CACN;YACIC,KAAK,EAAE,yBAAyB;YAChCV,IAAI,EAAEA,IAAI,CAACI,MAAM,CAACC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1CK,eAAe,EAAE,MAAM;YACvBC,WAAW,EAAE;UACjB,CAAC;QAET,CAAC;QAEDpB,YAAY,CAACU,aAAa,CAAC;MAC/B,CAAC,CAAC,OAAOW,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ,CAAC;IAEDhB,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA;IAAA2B,QAAA,EACKxB,SAAS,gBACNH,OAAA,CAACH,GAAG;MAEAe,IAAI,EAAET,SAAU;MAChByB,OAAO,EAAE;QACLC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE,KAAK;QAC1BC,MAAM,EAAE;UACJC,KAAK,EAAE,CACH;YACIC,IAAI,EAAE,UAAU;YAChBC,SAAS,EAAE;cACPC,OAAO,EAAE;YACb;UACJ,CAAC,CACJ;UACDC,KAAK,EAAE,CACH;YACIF,SAAS,EAAE;cACPC,OAAO,EAAE;YACb,CAAC;YACDE,KAAK,EAAE;cACHC,WAAW,EAAE;YACjB;UACJ,CAAC;QAET;MACJ;IAAE,GAzBGC,IAAI,CAACC,SAAS,CAACrC,SAAS,CAAC;MAAAsC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OA0BjC,CAAC,gBAEF5C,OAAA;MAAA2B,QAAA,EAAG;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC1C,EAAA,CArEID,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAuEjB,eAAeA,WAAW;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}