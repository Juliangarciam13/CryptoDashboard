{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/CryptoDashboard/src/Components/Graph.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoChart = _ref => {\n  _s();\n  let {\n    crypto\n  } = _ref;\n  const [chartData, setChartData] = useState(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      try {\n        const response = await fetch(`https://api.coingecko.com/api/v3/coins/${crypto.id}/market_chart?vs_currency=usd&days=30`);\n        const data = await response.json();\n        const formattedData = {\n          labels: data.prices.map(entry => new Date(entry[0]).toLocaleDateString()),\n          datasets: [{\n            label: `Precio de ${crypto.name} (USD)`,\n            data: data.prices.map(entry => entry[1]),\n            backgroundColor: \"blue\",\n            borderColor: \"blue\"\n          }]\n        };\n        setChartData(formattedData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCryptoData();\n  }, [crypto]);\n  useEffect(() => {\n    if (chartData) {\n      const ctx = chartRef.current.getContext(\"2d\");\n      new Chart(ctx, {\n        type: \"bar\",\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              grid: {\n                display: false\n              }\n            },\n            y: {\n              grid: {\n                display: true\n              },\n              ticks: {\n                beginAtZero: true\n              }\n            }\n          }\n        }\n      });\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chartData ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando datos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n_s(CryptoChart, \"pZiLd+mBGrUgtjABGYJARwxehfg=\");\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["useState","useEffect","useRef","Chart","jsxDEV","_jsxDEV","CryptoChart","_ref","_s","crypto","chartData","setChartData","chartRef","fetchCryptoData","response","fetch","id","data","json","formattedData","labels","prices","map","entry","Date","toLocaleDateString","datasets","label","name","backgroundColor","borderColor","error","console","ctx","current","getContext","type","options","responsive","maintainAspectRatio","scales","x","grid","display","y","ticks","beginAtZero","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/CryptoDashboard/src/Components/Graph.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\n\nconst CryptoChart = ({ crypto }) => {\n    const [chartData, setChartData] = useState(null);\n    const chartRef = useRef(null);\n  \n    useEffect(() => {\n      const fetchCryptoData = async () => {\n        try {\n          const response = await fetch(\n            `https://api.coingecko.com/api/v3/coins/${crypto.id}/market_chart?vs_currency=usd&days=30`\n          );\n          const data = await response.json();\n  \n          const formattedData = {\n            labels: data.prices.map((entry) =>\n              new Date(entry[0]).toLocaleDateString()\n            ),\n            datasets: [\n              {\n                label: `Precio de ${crypto.name} (USD)`,\n                data: data.prices.map((entry) => entry[1]),\n                backgroundColor: \"blue\",\n                borderColor: \"blue\",\n              },\n            ],\n          };\n  \n          setChartData(formattedData);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n      fetchCryptoData();\n    }, [crypto]);\n  \n    useEffect(() => {\n      if (chartData) {\n        const ctx = chartRef.current.getContext(\"2d\");\n  \n        new Chart(ctx, {\n          type: \"bar\",\n          data: chartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              x: {\n                grid: {\n                  display: false,\n                },\n              },\n              y: {\n                grid: {\n                  display: true,\n                },\n                ticks: {\n                  beginAtZero: true,\n                },\n              },\n            },\n          },\n        });\n      }\n    }, [chartData]);\n  \n    return (\n      <div>\n        {chartData ? (\n          <canvas ref={chartRef}></canvas>\n        ) : (\n          <p>Cargando datos...</p>\n        )}\n      </div>\n    );\n  };\n  \n  export default CryptoChart;\n  "],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC3B,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMY,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,0CAAyCN,MAAM,CAACO,EAAG,uCACtD,CAAC;QACD,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAElC,MAAMC,aAAa,GAAG;UACpBC,MAAM,EAAEH,IAAI,CAACI,MAAM,CAACC,GAAG,CAAEC,KAAK,IAC5B,IAAIC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,kBAAkB,CAAC,CACxC,CAAC;UACDC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAG,aAAYlB,MAAM,CAACmB,IAAK,QAAO;YACvCX,IAAI,EAAEA,IAAI,CAACI,MAAM,CAACC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1CM,eAAe,EAAE,MAAM;YACvBC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC;QAEDnB,YAAY,CAACQ,aAAa,CAAC;MAC7B,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDlB,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZR,SAAS,CAAC,MAAM;IACd,IAAIS,SAAS,EAAE;MACb,MAAMuB,GAAG,GAAGrB,QAAQ,CAACsB,OAAO,CAACC,UAAU,CAAC,IAAI,CAAC;MAE7C,IAAIhC,KAAK,CAAC8B,GAAG,EAAE;QACbG,IAAI,EAAE,KAAK;QACXnB,IAAI,EAAEP,SAAS;QACf2B,OAAO,EAAE;UACPC,UAAU,EAAE,IAAI;UAChBC,mBAAmB,EAAE,KAAK;UAC1BC,MAAM,EAAE;YACNC,CAAC,EAAE;cACDC,IAAI,EAAE;gBACJC,OAAO,EAAE;cACX;YACF,CAAC;YACDC,CAAC,EAAE;cACDF,IAAI,EAAE;gBACJC,OAAO,EAAE;cACX,CAAC;cACDE,KAAK,EAAE;gBACLC,WAAW,EAAE;cACf;YACF;UACF;QACF;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACpC,SAAS,CAAC,CAAC;EAEf,oBACEL,OAAA;IAAA0C,QAAA,EACGrC,SAAS,gBACRL,OAAA;MAAQ2C,GAAG,EAAEpC;IAAS;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,gBAEhC/C,OAAA;MAAA0C,QAAA,EAAG;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACxB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5C,EAAA,CA1EEF,WAAW;AAAA+C,EAAA,GAAX/C,WAAW;AA4Ef,eAAeA,WAAW;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}