{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/CryptoDashboard/src/Components/CryptoChart.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoChart = _ref => {\n  _s();\n  let {\n    selectedCrypto\n  } = _ref;\n  const [chartData, setChartData] = useState(null);\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      try {\n        if (!selectedCrypto) {\n          setChartData(null);\n          return;\n        }\n        const response = await fetch(`https://api.coingecko.com/api/v3/coins/${selectedCrypto.symbol.toLowerCase()}/market_chart?vs_currency=usd&days=30`);\n        const data = await response.json();\n        const dates = [];\n        const prices = [];\n        for (let i = 0; i < data.prices.length; i++) {\n          const timestamp = data.prices[i][0];\n          const date = new Date(timestamp);\n          dates.push(date.toLocaleDateString());\n          prices.push(data.prices[i][1]);\n        }\n        const formattedData = {\n          labels: dates,\n          datasets: [{\n            label: `Precio de ${selectedCrypto.name} (USD)`,\n            data: prices,\n            backgroundColor: \"rgba(192, 192, 192, 0.8)\",\n            borderWidth: 2,\n            hoverBackgroundColor: \"#C1EE0A\"\n          }]\n        };\n        setChartData(formattedData);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchCryptoData();\n  }, [selectedCrypto]);\n  useEffect(() => {\n    if (chartData) {\n      const ctx = chartRef.current.getContext(\"2d\");\n      if (chartRef.current.chart) {\n        chartRef.current.chart.destroy();\n      }\n      chartRef.current.chart = new Chart(ctx, {\n        type: \"bar\",\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          scales: {\n            x: {\n              grid: {\n                display: false\n              },\n              ticks: {\n                beginAtZero: true,\n                font: {\n                  size: 12\n                }\n              },\n              categoryPercentage: 1,\n              barPercentage: 0.8\n            },\n            y: {\n              grid: {\n                display: true\n              },\n              ticks: {\n                stepSize: 500,\n                font: {\n                  size: 12\n                }\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      });\n    }\n  }, [chartData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"400px\"\n    },\n    children: chartData ? /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 7\n  }, this);\n};\n_s(CryptoChart, \"pZiLd+mBGrUgtjABGYJARwxehfg=\");\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["useState","useEffect","useRef","Chart","jsxDEV","_jsxDEV","CryptoChart","_ref","_s","selectedCrypto","chartData","setChartData","chartRef","fetchCryptoData","response","fetch","symbol","toLowerCase","data","json","dates","prices","i","length","timestamp","date","Date","push","toLocaleDateString","formattedData","labels","datasets","label","name","backgroundColor","borderWidth","hoverBackgroundColor","error","console","ctx","current","getContext","chart","destroy","type","options","responsive","maintainAspectRatio","scales","x","grid","display","ticks","beginAtZero","font","size","categoryPercentage","barPercentage","y","stepSize","plugins","legend","style","width","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbook/Desktop/CryptoDashboard/src/Components/CryptoChart.jsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport Chart from \"chart.js/auto\";\n\n\nconst CryptoChart = ({ selectedCrypto }) => {\n    const [chartData, setChartData] = useState(null);\n    const chartRef = useRef(null);\n  \n    useEffect(() => {\n      const fetchCryptoData = async () => {\n        try {\n          if (!selectedCrypto) {\n            setChartData(null);\n            return;\n          }\n  \n          const response = await fetch(\n            `https://api.coingecko.com/api/v3/coins/${selectedCrypto.symbol.toLowerCase()}/market_chart?vs_currency=usd&days=30`\n          );\n          const data = await response.json();\n  \n          const dates = [];\n          const prices = [];\n  \n          for (let i = 0; i < data.prices.length; i++) {\n            const timestamp = data.prices[i][0];\n            const date = new Date(timestamp);\n            dates.push(date.toLocaleDateString());\n            prices.push(data.prices[i][1]);\n          }\n  \n          const formattedData = {\n            labels: dates,\n            datasets: [\n              {\n                label: `Precio de ${selectedCrypto.name} (USD)`,\n                data: prices,\n                backgroundColor: \"rgba(192, 192, 192, 0.8)\",\n                borderWidth: 2,\n                hoverBackgroundColor: \"#C1EE0A\",\n              },\n            ],\n          };\n  \n          setChartData(formattedData);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n  \n      fetchCryptoData();\n    }, [selectedCrypto]);\n  \n    useEffect(() => {\n      if (chartData) {\n        const ctx = chartRef.current.getContext(\"2d\");\n  \n        if (chartRef.current.chart) {\n          chartRef.current.chart.destroy();\n        }\n  \n        chartRef.current.chart = new Chart(ctx, {\n          type: \"bar\",\n          data: chartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            scales: {\n              x: {\n                grid: {\n                  display: false,\n                },\n                ticks: {\n                  beginAtZero: true,\n                  font: {\n                    size: 12,\n                  },\n                },\n                categoryPercentage: 1,\n                barPercentage: 0.8,\n              },\n              y: {\n                grid: {\n                  display: true,\n                },\n                ticks: {\n                  stepSize: 500,\n                  font: {\n                    size: 12,\n                  },\n                },\n              },\n            },\n            plugins: {\n              legend: {\n                display: false,\n              },\n            },\n          },\n        });\n      }\n    }, [chartData]);\n  \n    return (\n      <div style={{ width: \"100%\", height: \"400px\" }}>\n        {chartData ? (\n          <canvas ref={chartRef}></canvas>\n        ) : (\n          <p>Loading...</p>\n        )}\n      </div>\n    );\n  };\n  \n  export default CryptoChart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}